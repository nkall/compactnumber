// Code generated by https://github.com/nkall/compactnumber at {{ .Timestamp }}
// Based on https://github.com/unicode-cldr/cldr-numbers-modern version {{ .CLDRVersion }}
//
// Do not edit this file manually! Instead, follow the "Generating Compact Forms" guide in the README.
package compactnumber_test

import (
	"fmt"
	"testing"

	"github.com/nkall/compactnumber"
	"golang.org/x/text/language"
)

func TestAllCompactFormsByLanguage(t *testing.T) {
		tests := []struct {
			localeStr   string
		}{
		{{ range $lang, $compactForms := .CompactFormsByLanguage }}
		{localeStr: "{{ $lang }}"},{{ end }}
		}

		for _, tt := range tests {
			t.Run(tt.localeStr, func(t *testing.T) {
				formatter := compactnumber.NewFormatter(language.Make(tt.localeStr), compactnumber.Short)
				out, err := formatter.Format(9493310609)
				if err != nil {
					t.Error(fmt.Sprintf("got unexpected error %v", err))
				}
				if out == "" {
					t.Error("got empty output")
				}

                formatter = compactnumber.NewFormatter(language.Make(tt.localeStr), compactnumber.Long)
                out, err = formatter.Format(8675309)
                if err != nil {
                    t.Error(fmt.Sprintf("got unexpected error %v", err))
                }
                if out == "" {
                    t.Error("got empty output")
                }
			})
		}
}
